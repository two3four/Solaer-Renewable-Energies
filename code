<!DOCTYPE html>
<html>
<head>
    <title>Solar Projects Map</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
    <style>
        #mapid { height: 100vh; }
        .custom-popup .leaflet-popup-content-wrapper {
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 3px 14px rgba(0,0,0,0.4);
            border-radius: 12px;
            font-family: Arial, sans-serif;
        }
        .custom-popup .leaflet-popup-content {
            color: #333;
            font-size: 14px;
            line-height: 1.4;
        }
    </style>
</head>
<body>
    <div id="mapid"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>
    <script>
        var map = L.map('mapid').setView([40, -3], 5); // Centers the map over Spain

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 18,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var markers = L.markerClusterGroup({
            maxClusterRadius: 40, // smaller radius to avoid large clusters
            spiderfyOnMaxZoom: true, // spread out markers when zoomed in
            showCoverageOnHover: false,
            zoomToBoundsOnClick: true
        });

        fetch('https://raw.githubusercontent.com/two3four/SC-web-map105/main/Projects_Solaer_GeoJSON.geojson')
            .then(function(response) {
                return response.json();
            })
            .then(function(geojsonData) {
                L.geoJSON(geojsonData, {
                    pointToLayer: function (feature, latlng) {
                        return L.circleMarker(latlng, {
                            radius: 8,
                            fillColor: "#ff7800",
                            color: "#000",
                            weight: 1,
                            opacity: 1,
                            fillOpacity: 0.8
                        });
                    },
                    onEachFeature: function (feature, layer) {
                        if (feature.properties) {
                            var popupContent = "<div class='custom-popup'><b>Project:</b> " + feature.properties.Project +
                                               "<br><b>Power:</b> " + feature.properties.Power +
                                               "<br><b>Country:</b> " + feature.properties.Country +
                                               "<br><b>Location:</b> " + feature.properties.Location +
                                               "<br><b>Status:</b> " + feature.properties.Status +
                                               "<br><b>Technology:</b> " + feature.properties.Technology + "</div>";
                            layer.bindPopup(popupContent);
                        }
                    }
                }).addTo(markers);
                map.addLayer(markers);
            })
            .catch(function(error) {
                console.error('Error loading the GeoJSON data: ' + error);
            });
    </script>
</body>
</html>
